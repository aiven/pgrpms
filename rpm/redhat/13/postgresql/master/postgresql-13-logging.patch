Change the built-in default socket directory to be /var/run/postgresql.
For backwards compatibility with (probably non-libpq-based) clients that
might still expect to find the socket in /tmp, also create a socket in
/tmp.  This is to resolve communication problems with clients operating
under systemd's PrivateTmp environment, which won't be using the same
global /tmp directory as the server; see bug #825448.

Note that we apply the socket directory change at the level of the
hard-wired defaults in the C code, not by just twiddling the setting in
postgresql.conf.sample; this is so that the change will take effect on
server package update, without requiring any existing postgresql.conf
to be updated.  (Of course, a user who dislikes this behavior can still
override it via postgresql.conf.)

--- src/backend/utils/misc/guc.c.old	2020-02-04 19:31:44.260496683 +0300
+++ src/backend/utils/misc/guc.c	2020-02-04 19:33:03.402918515 +0300
@@ -4064,7 +4064,7 @@
 		},
 		&Unix_socket_directories,
 #ifdef HAVE_UNIX_SOCKETS
-		DEFAULT_PGSOCKET_DIR,
+		DEFAULT_PGSOCKET_DIR ", /tmp",
 #else
 		"",
 #endif
--- src/bin/initdb/initdb.c.old	2020-02-04 19:31:54.060548918 +0300
+++ src/bin/initdb/initdb.c	2020-02-04 19:33:03.403918520 +0300
@@ -1091,7 +1091,7 @@
 
 #ifdef HAVE_UNIX_SOCKETS
 	snprintf(repltok, sizeof(repltok), "#unix_socket_directories = '%s'",
-			 DEFAULT_PGSOCKET_DIR);
+			 DEFAULT_PGSOCKET_DIR ", /tmp");
 #else
 	snprintf(repltok, sizeof(repltok), "#unix_socket_directories = ''");
 #endif
--- src/include/pg_config_manual.h.old	2020-02-04 19:32:11.436641533 +0300
+++ src/include/pg_config_manual.h	2020-02-04 19:33:03.403918520 +0300
@@ -197,7 +197,7 @@
  * is changed, a client will connect via TCP/IP by default and will only use
  * an AF_UNIX socket if one is explicitly specified.
  */
-#define DEFAULT_PGSOCKET_DIR  "/tmp"
+#define DEFAULT_PGSOCKET_DIR  "/var/run/postgresql"
 
 /*
  * This is the default event source for Windows event log.
